library(RFMPackage)
library(data.table)
library(lubridate)
library(RFMPackage)
model_data <- fread("Transactions.csv")
setwd("~/Documents/UZH/FS22/R/Day 1")
model_data <- fread("Transactions.csv")
transactions <- fread("Transactions.csv")
transactions[, TransDate:=dmy(TransDate, tz = "UTC")]
RFMfunction(transactions, 20, 60, 20)
RFMfunction(transactions, 20, 60, 20)
transactions <- fread("Transactions.csv")
transactions[, TransDate:=dmy(TransDate, tz = "UTC")]
RFMfunction(transactions, 20, 60, 20)
rm(x)
rm(x)
rm(x)
View(x)
rm(drop)
RFMfunction(transactions, 20, 60, 20)
RFMfunction(transactions, 20, 60, 20)
RFMfunction(transactions, 20, 60, 20)
RFMfunction(transactions, 20, 60, 20)
library(RFMPackage)
transactions <- fread("Transactions.csv")
transactions[, TransDate:=dmy(TransDate, tz = "UTC")]
RFMfunction(transactions, 20, 60, 20)
library(RFMPackage)
library(RFMPackage)
transactions <- fread("Transactions.csv")
transactions[, TransDate:=dmy(TransDate, tz = "UTC")]
RFMfunction(transactions, 20, 60, 20)
library(RFMPackage)
RFMfunction(transactions, 20, 60, 20)
library(RFMPackage)
RFMfunction(transactions, 20, 60, 20)
temp <- data[,list(
recency = as.numeric(max.Date - max(data$TransDate)),
frequency = .N,
monetary = mean(data$PurchAmount)),
by=Customer
]
data
recency = as.numeric(max.Date - max(data$TransDate))
as.numeric(max.Date - max(data$TransDate)
as.numeric(max.Date - max(data$TransDate))
as.numeric(max.Date - max(data$TransDate)
)
mean(data$PurchAmount))
mean(data$PurchAmount)
list(
recency = as.numeric(max.Date - max(data$TransDate)),
frequency = .N,
monetary = mean(data$PurchAmount))
data[,list(
recency = as.numeric(max.Date - max(data$TransDate)),
frequency = .N,
monetary = mean(data$PurchAmount)),
by=Customer
]
str(data)
install.packages("roxygen2")
library(roxygen2)
library(RFMPackage)
library(RFMPackage)
devtools::document()
?RFMfunction
RFMfunction(transactions, 20, 20, 60)
library(RFMPackage)
RFMfunction(transactions, 20, 60, 20)
library(RFMPackage)
RFMfunction(transactions, 20, 60, 20)
library(RFMPackage)
RFMfunction(transactions, 20, 60, 20)
library(RFMPackage)
RFMfunction(transactions, 20, 60, 20)
library(RFMPackage)
RFMfunction(transactions, 20, 60, 20)
library(RFMPackage)
RFMfunction(transactions, 20, 60, 20)
library(RFMPackage)
library(data.table)
library(lubridate)
library(RFMPackage)
transactions <- fread("Transactions.csv")
transactions[, TransDate:=dmy(TransDate, tz = "UTC")]
RFMfunction(transactions, 20, 60, 20)
install.packages("roxygen2")
library(roxygen2)
RFMfunction(transactions, 20, 60, 20)
transactions <- fread("Transactions.csv")
setwd("~/Documents/UZH/FS22/R/Day 1")
transactions <- fread("Transactions.csv")
transactions[, TransDate:=dmy(TransDate, tz = "UTC")]
RFMfunction(transactions, 20, 60, 20)
addFirstTwo <- function(vec){
result <- vec[1] + vec[2]
return(result)
}
addFirstTwo(c(1, "z"))
return(result)
addFirstTwo <- function(vec){
addFirstTwo <- function(vec){
print(result)
addFirstTwo <- function(vec){
addFirstTwo <- function(vec){
result <- print(class(vec[1]) + print(class(vec[2])))
print(result)
}
addFirstTwo(c(1, "z"))
addFirstTwo(c(1, "z"))
addFirstTwo <- function(vec){
result <- class(vec[1]) + class(vec[2])
print(result)
}
addFirstTwo(c(1, "z"))
addFirstTwo <- function(vec){
result <- class(vec[1]) + class(vec[2])
return(result)
}
addFirstTwo(c(1, "z"))
addFirstTwo(c(1, "z"))
addFirstTwo <- function(vec){
print(class[vec[1]])
result <- vec[1]) + vec[2]
return(result)
}
addFirstTwo(c(1, "z"))
addFirstTwo <- function(vec){
print(class[vec[1]])
result <- vec[1]) + vec[2]
return(result)
}
addFirstTwo <- function(vec){
print(class[vec[1]])
result <- vec[1]) + vec[2]
return(result)
}
(
addFirstTwo <- function(vec){
print(class[vec[1]])
result <- vec[1] + vec[2]
return(result)
}
addFirstTwo(c(1, "z"))
addFirstTwo <- function(vec){
addFirstTwo <- function(vec){
print(class(vec[1]))
result <- vec[1] + vec[2]
return(result)
}
addFirstTwo(c(1, "z"))
addFirstTwo <- function(vec){
x <- print(class(vec[1]))
result <- vec[1] + vec[2]
return(result)
}
addFirstTwo(c(1, "z"))
addFirstTwo <- function(vec){
x <- print(class(vec[1]))
result <- vec[1] + vec[2]
return(x)
}
addFirstTwo(c(1, "z"))
addFirstTwo <- function(x){
x <- c()
result <- vec[1] + vec[2]
return(x)
}
addFirstTwo(c(1, "z"))
addFirstTwo <- function(x){
x <- c()
result <- vec[1] + vec[2]
return(x)
}
addFirstTwo(1, "z")
addFirstTwo <- function(vec){
result <- vec[1]
return(result)
}
addFirstTwo(1, "z")
addFirstTwo(c(1, "z")
addFirstTwo <- function(c()){
result <- c[1]
return(result)
}
addFirstTwo(c(1, "z")
addFirstTwo <- function(c()){
result <- c[1]
return(result)
}
addFirstTwo(c(1, "z")
result <- x[1] + x[2]
addFirstTwo <- function(x) {
result <- x[1] + x[2]
return(result)
}
addFirstTwo(c(1, "z")
addFirstTwo <- function(x) {
result <- x[1] + x[2]
return(result)
}
addFirstTwo(c(1, "z")
addFirstTwo <- function(x) {
result <- sum(x[1], x[2])
return(result)
}
addFirstTwo <- function(x) {}
addFirstTwo <- function(x) {
result <- sum(x[1], x[2])
return(result)
}
addFirstTwo(c(1, "z")
addFirstTwo <- function(a) {
result <- sum(a[1], a[2])
return(result)
}
addFirstTwo(c(1, "z")
addFirstTwo <- function(a) {
result <- a[1] + a[2]
return(result)
}
addFirstTwo <- function(a) {
result <- sum(a[1],a[2])
return(result)
}
addFirstTwo(c(1, "z"))
addFirstTwo <- function(a) {
print(class(a[1]))
print(class(a[2]))
result <- sum(a[1],a[2])
return(result)
}
addFirstTwo(c(1, "z"))
browse()
addFirstTwo <- function(a) {
browse()
result <- sum(a[1],a[2])
return(result)
}
addFirstTwo(c(1, "z"))
addFirstTwo <- function(a) {
browser()
result <- sum(a[1],a[2])
return(result)
}
addFirstTwo(c(1, "z"))
mean(1:10, trim = NA)
traceback
addFirstTwo <- function(a) {
browser()
result <- sum(a[1],a[2])
return(result)
}
addFirstTwo(c(1, "z"))
result <- sum(a[1],a[2])
addFirstTwo <- function(a) {
result <- sum(a[1],a[2])
return(result)
}
addFirstTwo <- function(a) {
result <- sum(a[1],a[2])
return(result)
}
addFirstTwo(c(1, "z"))
addFirstTwo <- function(a) {
result <- sum(a[1],a[2])
return(result)
}
addFirstTwo(c(1, "z"))
mean(1:10, trim = NA)
mean(1:10, trim = NA)
traceback()
mean(1:10, trim = 1)
library(RFMPackage)
library(data.table)
library(lubridate)
library(RFMPackage)
transactions <- fread("Transactions.csv")
transactions[, TransDate:=dmy(TransDate, tz = "UTC")]
RFMfunction(transactions, 20, 60, 20)
library(RFMPackage)
transactions <- fread("Transactions.csv")
transactions[, TransDate:=dmy(TransDate, tz = "UTC")]
RFMfunction(transactions, 20, 60, 20)
library(Hmisc)
install.packages(Hmsic)
install.packages("Hmsic")
library(RFMPackage)
transactions <- fread("Transactions.csv")
transactions[, TransDate:=dmy(TransDate, tz = "UTC")]
RFMfunction(transactions, 20, 60, 20)
RFM
end <- RFMfunction(transactions, 20, 60, 20)
end
end
library(RFMPackage)
addFirstTwo <- function(a) {
addFirstTwo <- function(a) {
result <- sum(num(a[1]),num(a[2]))
return(result)
}
addFirstTwo(c(1, "z"))
addFirstTwo(c(1, "z"))
o()
addFirstTwo <- function(a) {
result <- sum(str(a[1]),str(a[2]))
return(result)
}
addFirstTwo(c(1, "z"))
addFirstTwo <- function(a) {
result <- str(a[1]) + str(a[2])
return(result)
}
addFirstTwo(c(1, "z"))
addFirstTwo <- function(a) {
result <- a[1]) + a[2]
return(result)
}
addFirstTwo(c(1, "z"))
addFirstTwo <- function(a) {
result <- a[1] + a[2]
return(result)
}
addFirstTwo(c(1, "z"))
addFirstTwo <- function(a) {
result <- num(a[1]) + num(a[2])
return(result)
}
addFirstTwo(c(1, "z"))
addFirstTwo <- function(a) {
result <- as.nummeric(a[1]) + as.numeric(a[2])
return(result)
}
addFirstTwo(c(1, "z"))
addFirstTwo <- function(a) {
result <- as.numeric(a[1]) + as.numeric(a[2])
return(result)
}
addFirstTwo(c(1, "z"))
addFirstTwo(c(1, "2"))
addFirstTwo(c(1, "z"))
library(RFMPackage)
install.packages("usethis")
library(usethis)
use_testthat()
use_testthat()
setwd("~/Documents/UZH/FS22/R/R---UZH/RFMPackage")
use_testthat()
context("Trying the new test function")
devtools::test()
install.packages(devtools)
install.packages("devtools")
library(devtools)
devtools::test()
test()
library(RFMPackage)
test()
test()
test()
test()
test()
test()
test()
test()
setwd("~/Documents/UZH/FS22/R/R---UZH/RFMPackage")
git clone https://github.com/octocat/Spoon-Knife.git
